plugins {
    id "io.spring.dependency-management" version "1.0.5.RELEASE"
    id 'org.jetbrains.kotlin.jvm' version '1.3.31'
}

group 'ru.romangr'
version '2.0-SNAPSHOT'

apply plugin: 'java'
apply plugin: 'jacoco'

sourceCompatibility = 1.11

repositories {
    mavenCentral()
    maven {
        url "https://jitpack.io"
    }
}

task createCommitProperties() {
    doLast {
        mkdir 'build/resources/main'
        def buffer = new ByteArrayOutputStream()
        buffer.withWriter("UTF-8", { writer ->
            writer.write('GIT_REVISION=')
        })
        exec {
            standardOutput = buffer
            commandLine 'git', 'log', "--pretty=%h %ci %s", '-1'
        }
        def file = file('build/resources/main/build.properties')
        file.withOutputStream { stream ->
            stream.write(buffer.toByteArray())
        }
    }
    outputs.file('build/resources/main/build.properties')
}

jar {
    manifest {
        attributes 'Main-Class': 'ru.romangr.catbot.Runner'
    }

    from {
        configurations.runtimeClasspath.collect { it.isDirectory() ? it : zipTree(it) }
    }

    dependsOn createCommitProperties
}

dependencyManagement {
    imports {
        mavenBom 'org.springframework.boot:spring-boot-dependencies:2.1.0.RELEASE'
    }
}

test {
    useJUnitPlatform()
}

jacoco {
    toolVersion '0.8.2'
}

jacocoTestReport {
    reports {
        xml.enabled false
        csv.enabled false
        html.enabled true
    }

    afterEvaluate {
        classDirectories = files(classDirectories.files.collect {
            fileTree(dir: it, exclude: [])
        })
    }
}

dependencies {
    implementation('javax.xml:jaxb-api:2.1')
    implementation('org.springframework:spring-web')
    implementation('com.fasterxml.jackson.core:jackson-core')
    implementation('com.fasterxml.jackson.core:jackson-annotations')
    implementation('com.fasterxml.jackson.core:jackson-databind')
    implementation('org.apache.commons:commons-lang3')
    implementation('com.github.romangr:exceptional:49186515')
    implementation('org.slf4j:slf4j-api')
    implementation('ch.qos.logback:logback-classic')
    implementation('com.google.guava:guava:27.1-jre')
    implementation "org.jetbrains.kotlin:kotlin-stdlib-jdk8"


    compileOnly('org.projectlombok:lombok:1.18.6')
    annotationProcessor('org.projectlombok:lombok:1.18.6')

    testImplementation('org.hamcrest:hamcrest-core')
    testImplementation('org.assertj:assertj-core')
    testImplementation('org.springframework:spring-test')
    testImplementation('org.junit.jupiter:junit-jupiter:5.4.1')
    testImplementation('org.mockito:mockito-core:2.10.0')

}
